# -*- coding: utf-8 -*-
"""FinalProject.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/12iekGMM91SJrE0vqo9hK4i5P_t7tcF-G

# Import Data

Source Data: https://www.kaggle.com/shuyangli94/food-com-recipes-and-user-interactions?select=RAW_recipes.csv
"""


"""### Users Features"""

df_users = pd.read_csv('/content/PP_users.csv')
df_users.head()

user_u = df_users.u.values
user_features_dict = {'u':user_u}
labels = ['Healthy','Veg dessert','Non-Veg dessert','Veg','Non-veg']
for i in labels: 
  user_features_dict[i] = []

users_embed =[]
for u in user_u: 
  df_u = df_users.loc[df_users['u']==u]
  str_item_list = df_u['items'].values
  str_rating_list = df_u['ratings'].values
  item_list = convert_string_to_float(str_item_list[0])
  rating_list = convert_string_to_float(str_rating_list[0])
  type_item_list = []
  u_embed = []
  for i in item_list: 
      df = df_PP_recipe.loc[df_PP_recipe['i']==i]
      type_item_list.append(df['food types'].values[0])
  sum = np.sum(rating_list)

  for j in labels:
      sum_type_rating = 0 
      embed_value = 0
      if j not in type_item_list:
        u_embed.append(0)
      else:
        for index in range(len(type_item_list)):
          if j == type_item_list[index]:    
              sum_type_rating += rating_list[index]
        if sum ==0:
          embed_value -= 0.1
        else:
          embed_value = sum_type_rating/sum
        u_embed.append(embed_value)
  if np.sum(u_embed) != 1:
      u_embed = np.array(u_embed)
      fill_value =  - np.sum(u_embed)
      zeros = np.where(u_embed==0)[0]
      fill_value = fill_value / len(zeros)
      u_embed = np.where(u_embed==0,fill_value,u_embed)
  users_embed.append(u_embed)

healthy = []
veg_dsrt = []
nonveg_dsrt = []
veg = []
nonveg  = []
for user in users_embed:
    healthy.append(user[0])
    veg_dsrt.append(user[1])
    nonveg_dsrt.append(user[2])
    veg.append(user[3])
    nonveg.append(user[4])
user_features_dict['Healthy'] = healthy
user_features_dict['Veg dessert'] = veg_dsrt
user_features_dict['Non-Veg dessert'] = nonveg_dsrt
user_features_dict['Veg'] = veg
user_features_dict['Non-veg'] = nonveg

df_u_embed = pd.DataFrame(data= user_features_dict)
df_u_embed.drop(columns=(['u']),axis=1,inplace=True)
df_u_embed

user_features = csr_matrix(df_u_embed)
user_features

